// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using QueensApp.Server.Properties.Data;

#nullable disable

namespace QueensApp.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240113231943_AddScoreAndPlayerEntities")]
    partial class AddScoreAndPlayerEntities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("QueensApp.Server.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("TimeCreate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TimeCreate = new DateTime(2024, 1, 13, 23, 19, 43, 342, DateTimeKind.Utc).AddTicks(8625),
                            Username = "Player1"
                        },
                        new
                        {
                            Id = 2,
                            TimeCreate = new DateTime(2024, 1, 13, 23, 19, 43, 342, DateTimeKind.Utc).AddTicks(8710),
                            Username = "Player2"
                        },
                        new
                        {
                            Id = 3,
                            TimeCreate = new DateTime(2024, 1, 13, 23, 19, 43, 342, DateTimeKind.Utc).AddTicks(8816),
                            Username = "Player3"
                        });
                });

            modelBuilder.Entity("QueensApp.Server.Models.Score", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<int>("ScoreAmount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId")
                        .IsUnique();

                    b.ToTable("Scores");

                    b.HasData(
                        new
                        {
                            Id = 100,
                            PlayerId = 3,
                            ScoreAmount = 200
                        },
                        new
                        {
                            Id = 101,
                            PlayerId = 2,
                            ScoreAmount = 500
                        },
                        new
                        {
                            Id = 102,
                            PlayerId = 1,
                            ScoreAmount = 10
                        });
                });

            modelBuilder.Entity("QueensApp.Server.Models.Score", b =>
                {
                    b.HasOne("QueensApp.Server.Models.Player", "Player")
                        .WithOne("Score")
                        .HasForeignKey("QueensApp.Server.Models.Score", "PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("QueensApp.Server.Models.Player", b =>
                {
                    b.Navigation("Score")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
